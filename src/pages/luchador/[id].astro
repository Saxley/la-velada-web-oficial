---
import { FIGHTERS } from '@/consts/fighters'
import Layout from '@/layouts/Layout.astro'
import { fixedTitle } from '@/consts/pageTitles'
import BoxerWorkout from '@/components/BoxerWorkout.astro'
import BoxerCard from '@/components/BoxerCard.astro'
import BoxerClipList from '@/components/BoxerClipList.astro'
import BoxerClipDrawer from '@/components/BoxerClipDrawer.astro'
import BoxerProfileCard from '@/components/BoxerProfileCard.astro'
import BoxerClip from '@/components/BoxerClip.astro'
import BoxerGallery from '@/components/BoxerGallery.astro'
const { id } = Astro.params

const fighter = FIGHTERS.find((fighter) => fighter.id === id)
if (!fighter) return Astro.redirect('/404')

const birthDate = fighter.birthDate.toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'short',
  day: 'numeric',
})

const opponent = FIGHTERS.find((f) => f.id === fighter.versus)
---

<Layout title={`${fighter.name} | ${fixedTitle}`}>
  <div class="mask-fade-bottom absolute inset-0 w-full bg-[url('/images/hero.avif')] bg-cover bg-center opacity-50">
  </div>
  <!-- INFORMACIÓN LUCHADOR -->
  <section class="relative flex min-h-screen w-full lowercase mt-20">
    <div class="relative z-10 flex flex-col lg:flex-row justify-center items-start gap-x-64 px-4 mx-auto pt-14">
      <!-- Columna 1: Estadísticas -->
      <div class="relative w-full lg:w-1/3">
        <!-- Fila superior: Botón para desplegar gráficos en resoluciones menores a md -->
        <div>
          <button
            class="grid px-4 py-8 backdrop-blur-md bg-black/40 rounded-lg w-full text-2xl text-theme-turquoise lg:cursor-default lg:pointer-events-none"
            onclick="document.getElementById('stats-list').classList.toggle('hidden')"
          >
            <center>ESTADISTICAS DEPORTIVAS</center>
          </button>
        </div>

        <!-- Contenedor de estadísticas -->
        <div
          id="stats-list"
          class="absolute sm:absolute left-0 right-0 mt-2 hidden lg:static lg:block bg-black/40 rounded-lg px-4 py-8 backdrop-blur-md z-20"
        >
          <!-- Primera fila: 3 columnas -->
          <div class="grid grid-cols-3 gap-4 pt-10">
            {
              Object.entries(fighter.qualities ?? {}).slice(0, 3).map(([key, value], index) => (
                <div
                  class="group flex flex-col items-center space-y-4 opacity-0 translate-y-[-20px] animate-fade-in"
                  style={`animation-delay: ${index * 0.1}s`}
                >
                  <!-- Contenedor del gráfico -->
                  <div class="relative w-20 h-20 sm:w-24 sm:h-24 lg:w-32 lg:h-32">
                    <svg class="w-full h-full" viewBox="0 0 36 36">
                      <circle
                        class="text-gray-700"
                        stroke="currentColor"
                        stroke-width="3"
                        fill="transparent"
                        r="16"
                        cx="18"
                        cy="18"
                      />
                      <circle
                        class="text-theme-turquoise"
                        stroke="currentColor"
                        stroke-width="3"
                        stroke-dasharray={`${value.percentage * 100}, 100`}
                        fill="transparent"
                        r="16"
                        cx="18"
                        cy="18"
                        style="transform: rotate(-90deg); transform-origin: center;"
                      />
                    </svg>
                    <!-- Porcentaje en el centro -->
                    <span class="absolute inset-0 flex items-center justify-center text-white text-sm font-bold">
                      {Math.round(value.percentage * 100)}%
                    </span>
                  </div>
                  <!-- Contenedor de la descripción -->
                  <div class="relative w-full">
                    <h3 class="md:text-2xl sm:text-sm  font-bold text-center text-theme-turquoise">
                      {key.replace(/_/g, ' ')}
                    </h3>
                  </div>
                </div>
              ))
            }
          </div>

          <!-- Segunda fila: 4 columnas -->
          <div class="grid grid-cols-4 gap-4 mt-4">
            <div></div> <!-- Espacio vacío en la primera columna -->
            {
              Object.entries(fighter.qualities ?? {}).slice(3, 5).map(([key, value], index) => (
                <div
                  class="group flex flex-col items-center space-y-4 opacity-0 translate-y-[-20px] animate-fade-in"
                  style={`animation-delay: ${(index + 3) * 0.1}s`}
                >
                  <!-- Contenedor del gráfico -->
                  <div class="relative w-20 h-20 sm:w-24 sm:h-24 lg:w-32 lg:h-32">
                    <svg class="w-full h-full" viewBox="0 0 36 36">
                      <circle
                        class="text-gray-700"
                        stroke="currentColor"
                        stroke-width="3"
                        fill="transparent"
                        r="16"
                        cx="18"
                        cy="18"
                      />
                      <circle
                        class="text-theme-turquoise"
                        stroke="currentColor"
                        stroke-width="3"
                        stroke-dasharray={`${value.percentage * 100}, 100`}
                        fill="transparent"
                        r="16"
                        cx="18"
                        cy="18"
                        style="transform: rotate(-90deg); transform-origin: center;"
                      />
                    </svg>
                    <!-- Porcentaje en el centro -->
                    <span class="absolute inset-0 flex items-center justify-center text-white text-sm font-bold">
                      {Math.round(value.percentage * 100)}%
                    </span>
                  </div>
                  <!-- Contenedor de la descripción -->
                  <div class="relative w-full">
                    <h3 class="lg:text-2xl sm:text-sm font-bold text-center text-theme-turquoise">
                      {key.replace(/_/g, ' ')}
                    </h3>
                  </div>
                </div>
              ))
            }
            <div></div> <!-- Espacio vacío en la última columna -->
          </div>
        </div>
  <section class="relative flex lg:min-h-screen w-full flex-col-reverse lg:flex-row">
    <!-- Fondo de la pagina -->
    <div class="mask-fade-bottom absolute inset-0 w-full bg-[url('/images/hero.avif')] bg-cover bg-center opacity-50">
    </div>

    <!-- Listado de Clips -->
    <div
      class="group flex lg:min-h-screen w-full lg:max-w-xl flex-col items-center justify-center gap-y-32 px-8 pt-4 lg:pt-24 text-right text-balance"
    >
      <BoxerClipList
        clips={fighter.clips}
        externalPlayer={false}
      />

      <div class="relative z-[101]">
        <BoxerClipDrawer
            clips={fighter.clips}
        />
      </div>
    </div>

    <!-- Boxeador perfil -->
    <div
      class=" relative z-10 flex w-full flex-col items-center justify-center pl-0 pr-0 lg:pr-8 pt-24 lg:flex-row lg:items-start lg:pt-32"
    >
      <!-- Imagenes del boxeador -->
      <div
        class=" relative mt-8 px-6 lg:px-2 flex h-[60vh] w-full lg:min-w-sm items-center justify-center lg:mt-0 lg:h-[80vh] lg:w-1/2"
      >
        <img
          src={`/images/fighters/big/${id}.webp`}
          alt={`Retrato de ${fighter.name}, participante de La Velada V`}
          class="animate-fade-in mask-image-fade-bottom h-full w-full object-contain transition-all duration-700 hover:scale-105"
          transition:name={`image-${id}`}
        />
        <img
          src={`/images/fighters/text/${id}.png`}
          alt={`Nombre de ${fighter.name} en texto decorativo`}
          class="animate-scale-in absolute bottom-6 lg:bottom-34 h-10 lg:h-16 w-auto "
          transition:name={`text-${id}`}
          loading="lazy"
        />
      </div>
      <!-- Fin de las imagenes del boxeador -->

      <div class="flex flex-col items-center justify-center w-full lg:w-1/3">
        <div class="relative flex h-[50vh] w-full items-center justify-center sm:h-[60vh] lg:h-[80vh]">
          <img
            src={`/images/fighters/big/${id}.webp`}
            alt={fighter.name}
            class="animate-fade-in mask-image-fade-bottom h-full w-full object-contain transition-all duration-700 hover:scale-105"
            transition:name={`image-${id}`}
          />
          <img
            src={`/images/fighters/text/${id}.png`}
            alt={fighter.name}
            class="animate-scale-in absolute bottom-12 sm:bottom-16 lg:bottom-24 h-12 sm:h-16 w-auto"
            transition:name={`text-${id}`}
          />
        </div>
      </div>

      <!-- Columna 3: Luchador Card-Data y Card-Opponent -->
      <div class="grid lg:grid-rows-3 grid-rows-1 gap-4 items-center w-full lg:w-1/3">
        <!-- Fila superior (vacía en dispositivos grandes, oculta en móviles) -->
        <div class="hidden lg:block"></div>

        <!-- Fila central: Contenedor de datos y oponente -->
        <div class="space-y-6 rounded-xl bg-black/40 p-6 backdrop-blur-sm w-full max-w-lg">
          <div class="mb-8 flex flex-col items-center">
            <h1 class="animate-fade-in-up text-center text-3xl font-bold text-theme-tickle-me-pink">
              {fighter.realName}
            </h1>
          </div>

          <div class="grid grid-cols-2 gap-4 text-center">
            <div class="stat-item">
              <div class="text-lg text-theme-turquoise font-bold">Edad</div>
              <div class="text-lg text-white">{fighter.age} años</div>
            </div>
            <div class="stat-item">
              <div class="text-lg text-theme-turquoise font-bold">Altura</div>
              <div class="text-lg text-white">{fighter.height}m</div>
            </div>
            <div class="stat-item">
              <div class="text-lg text-theme-turquoise font-bold">Peso</div>
              <div class="text-lg text-white">{fighter.weight}kg</div>
            </div>
            <div class="stat-item">
              <div class="text-lg text-theme-turquoise font-bold">Ciudad</div>
              <div class="text-lg text-white">{fighter.city}</div>
            </div>
          </div>

          <!-- Fecha de nacimiento -->
          <div class="animate-fade-in-up text-center">
            <div class="text-lg text-theme-turquoise font-bold">Fecha de nacimiento</div>
            <div class="text-lg text-white">{birthDate}</div>
          </div>
        </div>

        <!-- Fila inferior: Luchador Card-Opponent -->
        <div class="mt-1 space-y-6 rounded-xl bg-black/40 p-6 backdrop-blur-sm w-full max-w-lg">
          <BoxerClip clips={fighter.clips} />
          {
            opponent && (
              <div class="flex w-full items-center gap-4 justify-center">
                <img src="/images/versus.png" alt="Versus" class="h-12 w-auto" />
                <BoxerCard id={opponent.id} name={opponent.name} versus={fighter.id} class="group-hover:scale-110" />
              </div>
            )
          }
        </div>
      <!-- Tarjeta del boxeador -->
      <div class=" px-8 lg:px-0 mt-5 w-full flex flex-col items-center justify-center max-w-xl text-white lg:w-1/2 space-y-4">
        <BoxerProfileCard
          fighter={fighter}
          birthDate={birthDate}
        />
        {
          opponent && (
            <div class="flex w-full items-center justify-center gap-4">
              <img alt={`Enfrentamiento entre ${fighter.name} y ${opponent?.name ?? 'su oponente'}`} src="/images/versus.png" class="h-12 w-auto" />
              <BoxerCard
                id={opponent.id}
                versus={fighter.id}
                name={opponent.name}
                class="group-hover:scale-110"
              />
            </div>
          )
        }

      </div>
      <!-- Fin de la tarjeta del boxeador -->
    </div>
  </section>

  <!-- Redes Sociales del Boxeador -->
  <section>
    <div class="flex flex-wrap justify-center gap-3 space-x-2 px-4 lg:px-0">

      {
        (fighter.socials || [])?.map(({ url, image, name, label, followers }) => (
          <a
            href={url}
            target="_blank"
            aria-label={label ?? name}
            class="text-dark-magenta hover:to-theme-turquoise/70 hover:from-theme-tickle-me-pink/70 from-theme-turquoise/70 to-theme-tickle-me-pink/70 flex w-20 flex-col items-center justify-center bg-gradient-to-b transition duration-500 hover:scale-125 shadow-sm rounded-md "
          >
            <image.logo aria-hidden="true"/>
            <span class="text-pink-600 lowercase text-lg">{followers}</span>
          </a>
        ))
      }
    </div>
  </section>
  <!-- Clips del boxeador -->

  <!-- Video de Entrenamientos -->
  <section>
    {fighter.workout && <BoxerWorkout workout={fighter.workout} />}
  </section>

  {fighter.gallery && <BoxerGallery id={fighter.id} name={fighter.name} /> }
  
</Layout>

<style>
  .stat-item {
    animation: fadeIn 0.5s ease-out forwards;
    opacity: 0;
  }

  .stat-item:nth-child(1) {
    animation-delay: 0.1s;
  }
  .stat-item:nth-child(2) {
    animation-delay: 0.2s;
  }
  .stat-item:nth-child(3) {
    animation-delay: 0.3s;
  }
  .stat-item:nth-child(4) {
    animation-delay: 0.4s;
  }

  .mask-image-fade-bottom {
    mask-image: linear-gradient(to bottom, black 70%, transparent 100%);
    -webkit-mask-image: linear-gradient(to bottom, black 70%, transparent 100%);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

